#ifndef INCLUDE_PGN_TOKEN_HPP_
#define INCLUDE_PGN_TOKEN_HPP_

#include <string>

namespace PgnLib
{
  /*
   * Type used to define the type of a PgnToken.
   */
  enum PgnTokenType
  {
    SYMBOL = 0,
    WORD,
    STRING,
    COMMENT,
    NUMBER,
    RESULT
  };

  /*
   * Represent a token from a PGN game used by the PgnParser. Tokens are 
   * generated by the PgnTokenizer from a stream.
   */
  class PgnToken
  {
  private:
    // Type of the token.
    PgnTokenType type_;

    // Value of the token as a string.
    std::string value_;

  public:
    /*
     * Constructor of the class, takes the type and the value of the token as
     * input.
     */
    inline PgnToken(PgnTokenType type, const std::string& value)
    {
      type_ = type;
      value_ = value;
    }

    inline PgnTokenType type() const { return type_; };
    inline const std::string& value() const { return value_; };
  };
}

#endif // INCLUDE_PGN_TOKEN_HPP_
